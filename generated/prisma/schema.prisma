generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model calificacion {
  calificacion_id    Int       @id @default(autoincrement())
  user_id            Int?
  curso_id           String?   @db.VarChar(10)
  calificacion       Decimal?  @db.Decimal
  fecha_calificacion DateTime? @default(dbgenerated("((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text) AT TIME ZONE 'America/Lima'::text)")) @db.Timestamp(6)
  curso              curso?    @relation(fields: [curso_id], references: [curso_id], onDelete: Cascade, onUpdate: NoAction)
  usuario            usuario?  @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, curso_id])
}

model curso {
  curso_id              String          @id @db.VarChar(10)
  nombre                String          @db.VarChar(100)
  descripcion           String?
  calificacion_promedio Decimal?        @map("calificacion") @db.Decimal(3, 2)
  materiales            String?
  imagen                String?         @db.VarChar(255)
  precio                Decimal?        @db.Decimal(10, 2)
  fecha_creacion        DateTime?       @default(dbgenerated("((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text) AT TIME ZONE 'America/Lima'::text)")) @db.Timestamp(6)
  fecha_actualizacion   DateTime?       @default(dbgenerated("((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text) AT TIME ZONE 'America/Lima'::text)")) @db.Timestamp(6)
  video_intro           String?         @db.VarChar(250)
  duracion              Int?
  calificacion          calificacion[]
  unidad                unidad[]
  usuario_curso         usuario_curso[]
}

model leccion {
  leccion_id        Int        @id @default(autoincrement())
  unidad_id         Int?
  nombre            String     @db.VarChar(1000)
  video_url         String?    @db.VarChar(255)
  material_descarga String?
  leccion           String?    @db.VarChar(50)
  unidad            unidad?    @relation(fields: [unidad_id], references: [unidad_id], onDelete: Cascade, onUpdate: NoAction)
  progreso          progreso[]
}

model progreso {
  user_id     Int?
  leccion_id  Int?
  completado  Boolean? @default(false)
  progreso_id Int      @id @default(autoincrement())
  leccion     leccion? @relation(fields: [leccion_id], references: [leccion_id], onDelete: Cascade, onUpdate: NoAction)
  usuario     usuario? @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, leccion_id])
}

model unidad {
  unidad_id   Int       @id @default(autoincrement())
  curso_id    String?   @db.VarChar(10)
  nombre      String    @db.VarChar(100)
  descripcion String?
  unidad      String?   @db.VarChar(50)
  leccion     leccion[]
  curso       curso?    @relation(fields: [curso_id], references: [curso_id], onDelete: Cascade, onUpdate: NoAction)
}

model usuario {
  user_id             Int             @id @default(autoincrement())
  nombres             String?         @db.VarChar(100)
  apellidos           String?         @db.VarChar(100)
  dni                 String?         @unique @db.Char(8)
  celular             String?         @db.VarChar(15)
  correo              String          @unique @db.VarChar(100)
  usuario             String?         @unique @db.VarChar(50)
  contrasenia         String?         @db.VarChar(255)
  fecha_creacion      DateTime?       @default(dbgenerated("((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text) AT TIME ZONE 'America/Lima'::text)")) @db.Timestamp(6)
  fecha_actualizacion DateTime?       @default(dbgenerated("((CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text) AT TIME ZONE 'America/Lima'::text)")) @db.Timestamp(6)
  rol                 String?         @db.VarChar(50)
  calificacion        calificacion[]
  progreso            progreso[]
  usuario_curso       usuario_curso[]
}

model usuario_curso {
  user_id  Int
  curso_id String  @db.VarChar(10)
  curso    curso   @relation(fields: [curso_id], references: [curso_id], onDelete: Cascade, onUpdate: NoAction)
  usuario  usuario @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, curso_id])
}
